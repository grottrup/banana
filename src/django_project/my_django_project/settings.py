"""
Django settings for djangogmailemailclient project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import json




# open the config.json file where the credentials are stored
# since I have stored mine in the same directory as my manage.py file
# which is inside the main django project folder along side db.sdlite3

# NB: exclude this file from your git repo by adding it to .gitignore when pushing
# the project to a repo that will be accessed by other people

# I am opening the config.json file using the "with" context manager
# as it handles the opening and closing of the file

with open('config.json') as conf_file:
    config = json.load(conf_file)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-13u-w-%)j&o@@9^5n9pc1skgduij5sa+vkqzsomgvn4wc_^)nl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [

    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'users',

    'crispy_forms',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangogmailemailclient.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangogmailemailclient.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR,'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configure the Crispy package/app to use bootstart4 in its styling
CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'index'
# the route the user will automatically be redirected if they access a page without logging in
LOGIN_URL = 'login'

AUTH_USER_MODEL = 'users.User' 

# email configuration settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
# the GMAIL account to use to send emails from

# if you open/log into this email you will 
# view all email sent from it to other emails

EMAIL_HOST_USER = config.get('EMAIL_HOST')
DEFAULT_EMAIL_FROM = 'email'
#EMAIL_HOST_USER = 'email'
# if you saved the data inside window’s environmental variable 
# EMAIL_HOST_USER = os.environ.get('EMAIL_HOST')

# the generated app password for the GMAIL account to use
#EMAIL_HOST_PASSWORD = config.get('EMAIL_PASSWORD')
EMAIL_HOST_PASSWORD = config.get('EMAIL_PASSWORD')
# if you saved the data inside window’s environmental variable 
# EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD')


DISPOSABLE_EMAIL_DOMAINS = "/users/templates/blacklist/disposable_email_domains.txt"

#DEC_LOADER = "my.package.custom_email_domain_loader"
#BDEA_APIKEY = "abcnotarealkey123"
#BDEA_TIMEOUT = 2
#BDEA_MESSAGE = '<blocked email message>'